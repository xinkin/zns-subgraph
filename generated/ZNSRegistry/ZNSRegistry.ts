// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get approved(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ApprovalForAll extends ethereum.Event {
  get params(): ApprovalForAll__Params {
    return new ApprovalForAll__Params(this);
  }
}

export class ApprovalForAll__Params {
  _event: ApprovalForAll;

  constructor(event: ApprovalForAll) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class BatchMetadataUpdate extends ethereum.Event {
  get params(): BatchMetadataUpdate__Params {
    return new BatchMetadataUpdate__Params(this);
  }
}

export class BatchMetadataUpdate__Params {
  _event: BatchMetadataUpdate;

  constructor(event: BatchMetadataUpdate) {
    this._event = event;
  }

  get _fromTokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _toTokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class MetadataUpdate extends ethereum.Event {
  get params(): MetadataUpdate__Params {
    return new MetadataUpdate__Params(this);
  }
}

export class MetadataUpdate__Params {
  _event: MetadataUpdate;

  constructor(event: MetadataUpdate) {
    this._event = event;
  }

  get _tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class MintedDomain extends ethereum.Event {
  get params(): MintedDomain__Params {
    return new MintedDomain__Params(this);
  }
}

export class MintedDomain__Params {
  _event: MintedDomain;

  constructor(event: MintedDomain) {
    this._event = event;
  }

  get domainName(): string {
    return this._event.parameters[0].value.toString();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get expiry(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PrimaryDomainSet extends ethereum.Event {
  get params(): PrimaryDomainSet__Params {
    return new PrimaryDomainSet__Params(this);
  }
}

export class PrimaryDomainSet__Params {
  _event: PrimaryDomainSet;

  constructor(event: PrimaryDomainSet) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RenewedDomain extends ethereum.Event {
  get params(): RenewedDomain__Params {
    return new RenewedDomain__Params(this);
  }
}

export class RenewedDomain__Params {
  _event: RenewedDomain;

  constructor(event: RenewedDomain) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get expiry(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ZNSRegistry__registryLookupByIdResultValue0Struct extends ethereum.Tuple {
  get owner(): Address {
    return this[0].toAddress();
  }

  get domainName(): string {
    return this[1].toString();
  }

  get lengthOfDomain(): i32 {
    return this[2].toI32();
  }

  get expirationDate(): BigInt {
    return this[3].toBigInt();
  }
}

export class ZNSRegistry__registryLookupByNameResultValue0Struct extends ethereum.Tuple {
  get owner(): Address {
    return this[0].toAddress();
  }

  get domainName(): string {
    return this[1].toString();
  }

  get lengthOfDomain(): i32 {
    return this[2].toI32();
  }

  get expirationDate(): BigInt {
    return this[3].toBigInt();
  }
}

export class ZNSRegistry__userLookupByAddressResultValue0Struct extends ethereum.Tuple {
  get primaryDomain(): BigInt {
    return this[0].toBigInt();
  }

  get allOwnedDomains(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get numberOfReferrals(): BigInt {
    return this[2].toBigInt();
  }

  get totalEarnings(): BigInt {
    return this[3].toBigInt();
  }
}

export class ZNSRegistry extends ethereum.SmartContract {
  static bind(address: Address): ZNSRegistry {
    return new ZNSRegistry("ZNSRegistry", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      [],
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  MAINTAINER_ROLE(): Bytes {
    let result = super.call(
      "MAINTAINER_ROLE",
      "MAINTAINER_ROLE():(bytes32)",
      [],
    );

    return result[0].toBytes();
  }

  try_MAINTAINER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "MAINTAINER_ROLE",
      "MAINTAINER_ROLE():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  TLD(): string {
    let result = super.call("TLD", "TLD():(string)", []);

    return result[0].toString();
  }

  try_TLD(): ethereum.CallResult<string> {
    let result = super.tryCall("TLD", "TLD():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  balanceOf(owner: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(owner),
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(owner),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  calculateActualFromBIPS(price: BigInt, bips: BigInt): BigInt {
    let result = super.call(
      "calculateActualFromBIPS",
      "calculateActualFromBIPS(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(price),
        ethereum.Value.fromUnsignedBigInt(bips),
      ],
    );

    return result[0].toBigInt();
  }

  try_calculateActualFromBIPS(
    price: BigInt,
    bips: BigInt,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "calculateActualFromBIPS",
      "calculateActualFromBIPS(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(price),
        ethereum.Value.fromUnsignedBigInt(bips),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  checkDomainStatus(tokenId: BigInt): i32 {
    let result = super.call(
      "checkDomainStatus",
      "checkDomainStatus(uint256):(uint8)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)],
    );

    return result[0].toI32();
  }

  try_checkDomainStatus(tokenId: BigInt): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "checkDomainStatus",
      "checkDomainStatus(uint256):(uint8)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  domainLookup(param0: string): BigInt {
    let result = super.call("domainLookup", "domainLookup(string):(uint256)", [
      ethereum.Value.fromString(param0),
    ]);

    return result[0].toBigInt();
  }

  try_domainLookup(param0: string): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "domainLookup",
      "domainLookup(string):(uint256)",
      [ethereum.Value.fromString(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getApproved(tokenId: BigInt): Address {
    let result = super.call("getApproved", "getApproved(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId),
    ]);

    return result[0].toAddress();
  }

  try_getApproved(tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getApproved",
      "getApproved(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getOraclePrice(): BigInt {
    let result = super.call("getOraclePrice", "getOraclePrice():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getOraclePrice(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getOraclePrice",
      "getOraclePrice():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getReferralBand(referral: Address): BigInt {
    let result = super.call(
      "getReferralBand",
      "getReferralBand(address):(uint256)",
      [ethereum.Value.fromAddress(referral)],
    );

    return result[0].toBigInt();
  }

  try_getReferralBand(referral: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getReferralBand",
      "getReferralBand(address):(uint256)",
      [ethereum.Value.fromAddress(referral)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role),
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  giftCard(): Address {
    let result = super.call("giftCard", "giftCard():(address)", []);

    return result[0].toAddress();
  }

  try_giftCard(): ethereum.CallResult<Address> {
    let result = super.tryCall("giftCard", "giftCard():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account),
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isApprovedForAll(owner: Address, operator: Address): boolean {
    let result = super.call(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(operator)],
    );

    return result[0].toBoolean();
  }

  try_isApprovedForAll(
    owner: Address,
    operator: Address,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(operator)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  oracle(): Address {
    let result = super.call("oracle", "oracle():(address)", []);

    return result[0].toAddress();
  }

  try_oracle(): ethereum.CallResult<Address> {
    let result = super.tryCall("oracle", "oracle():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ownerOf(tokenId: BigInt): Address {
    let result = super.call("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId),
    ]);

    return result[0].toAddress();
  }

  try_ownerOf(tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  partnerReferrals(param0: Address): BigInt {
    let result = super.call(
      "partnerReferrals",
      "partnerReferrals(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBigInt();
  }

  try_partnerReferrals(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "partnerReferrals",
      "partnerReferrals(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  priceToRegister(len: i32): BigInt {
    let result = super.call(
      "priceToRegister",
      "priceToRegister(uint16):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(len))],
    );

    return result[0].toBigInt();
  }

  try_priceToRegister(len: i32): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "priceToRegister",
      "priceToRegister(uint16):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(len))],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  priceToRenew(len: i32): BigInt {
    let result = super.call("priceToRenew", "priceToRenew(uint16):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(len)),
    ]);

    return result[0].toBigInt();
  }

  try_priceToRenew(len: i32): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "priceToRenew",
      "priceToRenew(uint16):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(len))],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  protectedDomains(param0: string): boolean {
    let result = super.call(
      "protectedDomains",
      "protectedDomains(string):(bool)",
      [ethereum.Value.fromString(param0)],
    );

    return result[0].toBoolean();
  }

  try_protectedDomains(param0: string): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "protectedDomains",
      "protectedDomains(string):(bool)",
      [ethereum.Value.fromString(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  registryLookupById(
    tokenId: BigInt,
  ): ZNSRegistry__registryLookupByIdResultValue0Struct {
    let result = super.call(
      "registryLookupById",
      "registryLookupById(uint256):((address,string,uint16,uint256))",
      [ethereum.Value.fromUnsignedBigInt(tokenId)],
    );

    return changetype<ZNSRegistry__registryLookupByIdResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_registryLookupById(
    tokenId: BigInt,
  ): ethereum.CallResult<ZNSRegistry__registryLookupByIdResultValue0Struct> {
    let result = super.tryCall(
      "registryLookupById",
      "registryLookupById(uint256):((address,string,uint16,uint256))",
      [ethereum.Value.fromUnsignedBigInt(tokenId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<ZNSRegistry__registryLookupByIdResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  registryLookupByName(
    domainName: string,
  ): ZNSRegistry__registryLookupByNameResultValue0Struct {
    let result = super.call(
      "registryLookupByName",
      "registryLookupByName(string):((address,string,uint16,uint256))",
      [ethereum.Value.fromString(domainName)],
    );

    return changetype<ZNSRegistry__registryLookupByNameResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_registryLookupByName(
    domainName: string,
  ): ethereum.CallResult<ZNSRegistry__registryLookupByNameResultValue0Struct> {
    let result = super.tryCall(
      "registryLookupByName",
      "registryLookupByName(string):((address,string,uint16,uint256))",
      [ethereum.Value.fromString(domainName)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<ZNSRegistry__registryLookupByNameResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  tokenID(): BigInt {
    let result = super.call("tokenID", "tokenID():(uint256)", []);

    return result[0].toBigInt();
  }

  try_tokenID(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("tokenID", "tokenID():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenURI(tokenId: BigInt): string {
    let result = super.call("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(tokenId),
    ]);

    return result[0].toString();
  }

  try_tokenURI(tokenId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(tokenId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  userLookupByAddress(
    user: Address,
  ): ZNSRegistry__userLookupByAddressResultValue0Struct {
    let result = super.call(
      "userLookupByAddress",
      "userLookupByAddress(address):((uint256,uint256[],uint256,uint256))",
      [ethereum.Value.fromAddress(user)],
    );

    return changetype<ZNSRegistry__userLookupByAddressResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_userLookupByAddress(
    user: Address,
  ): ethereum.CallResult<ZNSRegistry__userLookupByAddressResultValue0Struct> {
    let result = super.tryCall(
      "userLookupByAddress",
      "userLookupByAddress(address):((uint256,uint256[],uint256,uint256))",
      [ethereum.Value.fromAddress(user)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<ZNSRegistry__userLookupByAddressResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AdminRegisterDomainsCall extends ethereum.Call {
  get inputs(): AdminRegisterDomainsCall__Inputs {
    return new AdminRegisterDomainsCall__Inputs(this);
  }

  get outputs(): AdminRegisterDomainsCall__Outputs {
    return new AdminRegisterDomainsCall__Outputs(this);
  }
}

export class AdminRegisterDomainsCall__Inputs {
  _call: AdminRegisterDomainsCall;

  constructor(call: AdminRegisterDomainsCall) {
    this._call = call;
  }

  get owners(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get domainNames(): Array<string> {
    return this._call.inputValues[1].value.toStringArray();
  }

  get expiries(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class AdminRegisterDomainsCall__Outputs {
  _call: AdminRegisterDomainsCall;

  constructor(call: AdminRegisterDomainsCall) {
    this._call = call;
  }
}

export class AdminWithdrawCall extends ethereum.Call {
  get inputs(): AdminWithdrawCall__Inputs {
    return new AdminWithdrawCall__Inputs(this);
  }

  get outputs(): AdminWithdrawCall__Outputs {
    return new AdminWithdrawCall__Outputs(this);
  }
}

export class AdminWithdrawCall__Inputs {
  _call: AdminWithdrawCall;

  constructor(call: AdminWithdrawCall) {
    this._call = call;
  }
}

export class AdminWithdrawCall__Outputs {
  _call: AdminWithdrawCall;

  constructor(call: AdminWithdrawCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }
}

export class BurnDomainCall extends ethereum.Call {
  get inputs(): BurnDomainCall__Inputs {
    return new BurnDomainCall__Inputs(this);
  }

  get outputs(): BurnDomainCall__Outputs {
    return new BurnDomainCall__Outputs(this);
  }
}

export class BurnDomainCall__Inputs {
  _call: BurnDomainCall;

  constructor(call: BurnDomainCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class BurnDomainCall__Outputs {
  _call: BurnDomainCall;

  constructor(call: BurnDomainCall) {
    this._call = call;
  }
}

export class BurnExpiredDomainsCall extends ethereum.Call {
  get inputs(): BurnExpiredDomainsCall__Inputs {
    return new BurnExpiredDomainsCall__Inputs(this);
  }

  get outputs(): BurnExpiredDomainsCall__Outputs {
    return new BurnExpiredDomainsCall__Outputs(this);
  }
}

export class BurnExpiredDomainsCall__Inputs {
  _call: BurnExpiredDomainsCall;

  constructor(call: BurnExpiredDomainsCall) {
    this._call = call;
  }

  get tokenIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class BurnExpiredDomainsCall__Outputs {
  _call: BurnExpiredDomainsCall;

  constructor(call: BurnExpiredDomainsCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class ProtectDomainsCall extends ethereum.Call {
  get inputs(): ProtectDomainsCall__Inputs {
    return new ProtectDomainsCall__Inputs(this);
  }

  get outputs(): ProtectDomainsCall__Outputs {
    return new ProtectDomainsCall__Outputs(this);
  }
}

export class ProtectDomainsCall__Inputs {
  _call: ProtectDomainsCall;

  constructor(call: ProtectDomainsCall) {
    this._call = call;
  }

  get domainNames(): Array<string> {
    return this._call.inputValues[0].value.toStringArray();
  }

  get isProtectedValues(): Array<boolean> {
    return this._call.inputValues[1].value.toBooleanArray();
  }
}

export class ProtectDomainsCall__Outputs {
  _call: ProtectDomainsCall;

  constructor(call: ProtectDomainsCall) {
    this._call = call;
  }
}

export class RegisterDomainsCall extends ethereum.Call {
  get inputs(): RegisterDomainsCall__Inputs {
    return new RegisterDomainsCall__Inputs(this);
  }

  get outputs(): RegisterDomainsCall__Outputs {
    return new RegisterDomainsCall__Outputs(this);
  }
}

export class RegisterDomainsCall__Inputs {
  _call: RegisterDomainsCall;

  constructor(call: RegisterDomainsCall) {
    this._call = call;
  }

  get owners(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get domainNames(): Array<string> {
    return this._call.inputValues[1].value.toStringArray();
  }

  get expiries(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get referral(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get credits(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class RegisterDomainsCall__Outputs {
  _call: RegisterDomainsCall;

  constructor(call: RegisterDomainsCall) {
    this._call = call;
  }
}

export class RenewDomainCall extends ethereum.Call {
  get inputs(): RenewDomainCall__Inputs {
    return new RenewDomainCall__Inputs(this);
  }

  get outputs(): RenewDomainCall__Outputs {
    return new RenewDomainCall__Outputs(this);
  }
}

export class RenewDomainCall__Inputs {
  _call: RenewDomainCall;

  constructor(call: RenewDomainCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _years(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RenewDomainCall__Outputs {
  _call: RenewDomainCall;

  constructor(call: RenewDomainCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SafeTransferFromCall extends ethereum.Call {
  get inputs(): SafeTransferFromCall__Inputs {
    return new SafeTransferFromCall__Inputs(this);
  }

  get outputs(): SafeTransferFromCall__Outputs {
    return new SafeTransferFromCall__Outputs(this);
  }
}

export class SafeTransferFromCall__Inputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SafeTransferFromCall__Outputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }
}

export class SafeTransferFrom1Call extends ethereum.Call {
  get inputs(): SafeTransferFrom1Call__Inputs {
    return new SafeTransferFrom1Call__Inputs(this);
  }

  get outputs(): SafeTransferFrom1Call__Outputs {
    return new SafeTransferFrom1Call__Outputs(this);
  }
}

export class SafeTransferFrom1Call__Inputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SafeTransferFrom1Call__Outputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }
}

export class SetApprovalForAllCall extends ethereum.Call {
  get inputs(): SetApprovalForAllCall__Inputs {
    return new SetApprovalForAllCall__Inputs(this);
  }

  get outputs(): SetApprovalForAllCall__Outputs {
    return new SetApprovalForAllCall__Outputs(this);
  }
}

export class SetApprovalForAllCall__Inputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetApprovalForAllCall__Outputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }
}

export class SetDomainPricingCall extends ethereum.Call {
  get inputs(): SetDomainPricingCall__Inputs {
    return new SetDomainPricingCall__Inputs(this);
  }

  get outputs(): SetDomainPricingCall__Outputs {
    return new SetDomainPricingCall__Outputs(this);
  }
}

export class SetDomainPricingCall__Inputs {
  _call: SetDomainPricingCall;

  constructor(call: SetDomainPricingCall) {
    this._call = call;
  }

  get _domainPricing(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class SetDomainPricingCall__Outputs {
  _call: SetDomainPricingCall;

  constructor(call: SetDomainPricingCall) {
    this._call = call;
  }
}

export class SetGiftCardCall extends ethereum.Call {
  get inputs(): SetGiftCardCall__Inputs {
    return new SetGiftCardCall__Inputs(this);
  }

  get outputs(): SetGiftCardCall__Outputs {
    return new SetGiftCardCall__Outputs(this);
  }
}

export class SetGiftCardCall__Inputs {
  _call: SetGiftCardCall;

  constructor(call: SetGiftCardCall) {
    this._call = call;
  }

  get _giftCardAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetGiftCardCall__Outputs {
  _call: SetGiftCardCall;

  constructor(call: SetGiftCardCall) {
    this._call = call;
  }
}

export class SetOracleCall extends ethereum.Call {
  get inputs(): SetOracleCall__Inputs {
    return new SetOracleCall__Inputs(this);
  }

  get outputs(): SetOracleCall__Outputs {
    return new SetOracleCall__Outputs(this);
  }
}

export class SetOracleCall__Inputs {
  _call: SetOracleCall;

  constructor(call: SetOracleCall) {
    this._call = call;
  }

  get _oracleAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetOracleCall__Outputs {
  _call: SetOracleCall;

  constructor(call: SetOracleCall) {
    this._call = call;
  }
}

export class SetPartnerReferralCall extends ethereum.Call {
  get inputs(): SetPartnerReferralCall__Inputs {
    return new SetPartnerReferralCall__Inputs(this);
  }

  get outputs(): SetPartnerReferralCall__Outputs {
    return new SetPartnerReferralCall__Outputs(this);
  }
}

export class SetPartnerReferralCall__Inputs {
  _call: SetPartnerReferralCall;

  constructor(call: SetPartnerReferralCall) {
    this._call = call;
  }

  get referral(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get sharePercent(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetPartnerReferralCall__Outputs {
  _call: SetPartnerReferralCall;

  constructor(call: SetPartnerReferralCall) {
    this._call = call;
  }
}

export class SetPrimaryDomainCall extends ethereum.Call {
  get inputs(): SetPrimaryDomainCall__Inputs {
    return new SetPrimaryDomainCall__Inputs(this);
  }

  get outputs(): SetPrimaryDomainCall__Outputs {
    return new SetPrimaryDomainCall__Outputs(this);
  }
}

export class SetPrimaryDomainCall__Inputs {
  _call: SetPrimaryDomainCall;

  constructor(call: SetPrimaryDomainCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetPrimaryDomainCall__Outputs {
  _call: SetPrimaryDomainCall;

  constructor(call: SetPrimaryDomainCall) {
    this._call = call;
  }
}

export class SetProfitSharingDataCall extends ethereum.Call {
  get inputs(): SetProfitSharingDataCall__Inputs {
    return new SetProfitSharingDataCall__Inputs(this);
  }

  get outputs(): SetProfitSharingDataCall__Outputs {
    return new SetProfitSharingDataCall__Outputs(this);
  }
}

export class SetProfitSharingDataCall__Inputs {
  _call: SetProfitSharingDataCall;

  constructor(call: SetProfitSharingDataCall) {
    this._call = call;
  }

  get _partners(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _percentages(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class SetProfitSharingDataCall__Outputs {
  _call: SetProfitSharingDataCall;

  constructor(call: SetProfitSharingDataCall) {
    this._call = call;
  }
}

export class SetReferTicksCall extends ethereum.Call {
  get inputs(): SetReferTicksCall__Inputs {
    return new SetReferTicksCall__Inputs(this);
  }

  get outputs(): SetReferTicksCall__Outputs {
    return new SetReferTicksCall__Outputs(this);
  }
}

export class SetReferTicksCall__Inputs {
  _call: SetReferTicksCall;

  constructor(call: SetReferTicksCall) {
    this._call = call;
  }

  get _ticks(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class SetReferTicksCall__Outputs {
  _call: SetReferTicksCall;

  constructor(call: SetReferTicksCall) {
    this._call = call;
  }
}

export class SetRenewPricingCall extends ethereum.Call {
  get inputs(): SetRenewPricingCall__Inputs {
    return new SetRenewPricingCall__Inputs(this);
  }

  get outputs(): SetRenewPricingCall__Outputs {
    return new SetRenewPricingCall__Outputs(this);
  }
}

export class SetRenewPricingCall__Inputs {
  _call: SetRenewPricingCall;

  constructor(call: SetRenewPricingCall) {
    this._call = call;
  }

  get _renewPricing(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class SetRenewPricingCall__Outputs {
  _call: SetRenewPricingCall;

  constructor(call: SetRenewPricingCall) {
    this._call = call;
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}
