type Domain @entity {
  id: ID!
  name: String!
  owner: Owner!
  expiryDate: BigInt!
  createdAt: BigInt!
  events: [DomainEvent!]! @derivedFrom(field: "domain")
}

interface DomainEvent {
  id: ID!
  domain: Domain!
  blockNumber: BigInt!
  transactionHash: Bytes!
}

type Mint implements DomainEvent @entity {
  id: ID!
  domain: Domain!
  blockNumber: BigInt!
  transactionHash: Bytes!
  # owner: Owner!
  # expiryDate: BigInt!
}

type Transfer implements DomainEvent @entity {
  id: ID!
  domain: Domain!
  blockNumber: BigInt!
  transactionHash: Bytes!
  from: Owner!
  to: Owner!
}

type Owner @entity {
  id: ID!
  domains: [Domain!]! @derivedFrom(field: "owner")
  transfersFrom: [Transfer!]! @derivedFrom(field: "from")
  transfersTo: [Transfer!]! @derivedFrom(field: "to")
}